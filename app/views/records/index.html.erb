<% content_for :secondary_title do %>
  Checkout Records
<% end %>

<% content_for :secondary_nav do %>
  <%= link_to 'Back', :back %>
<% end %>

<% content_for :secondary_description do %>
  <%= form_tag(records_path, method: :get, enforce_utf8: false) do %>
    <div id="filter-by-area">
      <div>
        <%= label_tag :title_name, "Title:" %>
        <%= text_field_tag :title_name, params[:title_name] %>
      </div>
      <div>
        <%= label_tag :uniqname, "Uniqname:" %>
        <%= text_field_tag :uniqname, params[:uniqname] %>
      </div>
      <div>
        <%= label_tag :office_id, "Office:" %>
        <%= select_tag :office_id, options_from_collection_for_select(Office.all, "id", "name", current_office_id), include_blank: true, :id => params[:office_id] %>
      </div>
      <%= submit_tag "Filter", name: nil %>
    </div>
  <% end %>
<% end %>

<%= render "records/table", records: @records,
    display: [:name, :category, :borrower, :out, :in, (:office unless params[:office_id].present?)] %>

<% if @total_pages > 1 %>
  <!-- FUTURE: This is kind of a hack so... idk -->
  <div class="pagination-container">
    <ul class="pagination">
      <% @dot_dot_dotted = false %>
      <% (1..@total_pages).each do |i| %>
        <% # always show the first page, the last page, and the pages within %>
        <% # a distance of 2 %>
        <% if i == 1 or i == @total_pages or (i - @current_page).abs < 3 %>
          <% @dot_dot_dotted = false %>
          <li <%= 'class=active' if i == @current_page %>>
            <%= link_to i.to_s, @params.merge(:page => i) %>
          </li>
        <% elsif !@dot_dot_dotted %>
          <% @dot_dot_dotted = true %>
          <li class="disabled"><a>&hellip;</a></li>
        <% end %>
      <% end %>
    </ul>
  </div>
<% end %>



<!-- FUTURE: Convert the filtering stuff to use AJAX instead of loading a brand new page... -->